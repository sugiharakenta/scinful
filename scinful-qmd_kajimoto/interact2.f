******************************************
*     f_totalx3                          *
*     s_sig                              *
*     s_jamsighh                         *
*     s_jamsigda                         *
*     f_sigpic
*                                        *
******************************************


c-----------------------------------------
      function totalx3(ip,ene)
c-----------------------------------------
      common /DENS/ Apb(2)
      common /MASSES/ Emass (21)
      common /prob2/ p,S
      dimension S(2)
      real*8 sighh, sighc, srt ,pnrg
c-----------------------------------------
c_Get srt from particle energy at lab.sys.
      pnrg = dble(ene)
      em11 = Emass(ip)
       em1 = em11*1e-3   ! [GeV]
      em22 = Emass(2)   ! proton
       em2 = em22*1e-3   ! [GeV]
      elab = ene / 1000.0   ! [GeV]
      if( elab .lt. 0.002 ) elab = 0.002


      pproj = sqrt (elab*(2.0*em1+elab))   ! momentum of projectile


      srt = sqrt ((elab+em1+em2)**2-pproj**2)
      srt = dble(srt)
c-----------------------------------------
          incp = 20


      if( ip .eq. 1 ) then
          incp = 10
          isig = 3   ! np total


          call sig(incp,pnrg,sighc)


      else if( ip .eq. 2) then
          isig = 1   ! pp total


          call sig(incp,pnrg,sighc)


      else if( ip .eq. 20) then
          isig = 7   ! pion+ p total


          sigm = sigpic(ene)
          sighc = dble(sigm)


      else if( ip .eq. 21) then
          isig = 9   ! pion- p total


          sigm = sigpic(ene)
          sighc = dble(sigm)


      else


          write(*,*) '+++ error @ f_totalx3 ++++++'
          stop


      end if


          call jamsighh( sighh, isig, srt )
          sigh = sngl(sighh) *1.0e-3   ! [barns]


          sigc = sngl(sighc)


          S(1) = sigh * apb(1)
          S(2) = sigc * apb(2)


          sigtot = S(1) + S(2)
          P = S(1) / sigtot
          totalx3 = sigtot


c-----------------------------------------
c_check
c          write(32,*) 'sigh,sigc',sigh,sigc
c          write(32,*) 'Apb1,Apb2',Apb
c          write(32,*) 's1,s2',s(1),s(2)
c          write(32,*) 'p =',p
c          write(32,*) 'totalx3',totalx3


c-----------------------------------------
          return
          end


c********************************************
c ----------------------------------------------------------------------
      subroutine sig(incp,pnrg,sigt)
c ----------------------------------------------------------------------
c     calculates total, nonelastic and scattering cross-sections above
c     20 mev for incident nucleons.  code set for protons but can be
c     changed to incident neutrons.
c     input:
c       pnrg=incident nucleon energy (mev)
c      atarg=target mass (amu)
c     output:
c       sigt=total cross-section (b)
c       sigr=nonelastic cross-section (b)
c       sigs=sigt-sigr=elastic scattering cross-section (b)
c ----------------------------------------------------------------------
      implicit real*8 (a-h,o-z)


cs    include '../include2/param'
cs      common/incp/incp
cs    common/rz/rz
      dimension par(4),c(4,3)
      data (c(1,k),k=1,3)/1.353,0.4993,1.076/
      data (c(2,k),k=1,3)/0.6653,0.9900,1.040/
      data (c(3,k),k=1,3)/2.456,2.060,0.9314/
      data (c(4,k),k=1,3)/0.1167,1.623,0.9736/
c ----------------------------------------------------------------------
c
cs    if(rz.eq.0.) rz=0.14
cs_00/08/21
      atarg = 12d0   ! carbon
c-----------------------------
c_check
c      write(32,*) 'incp,pnrg,atarg',incp,pnrg,atarg
c-----------------------------


      a=atarg
      emev=pnrg
c     nuclear radius (cm.)
cs    r=(rz*a**0.3333+0.122*(a+1.)/a)*1.e-12
c     calculation of sigr as j.letaw etal., astrophys. j. supp. series
c     51,271-276(1983).
c     sigrb=asymptotic high energy reaction cross-section
      sigrb=0.045*a**0.7
c     energy dependent factor
      f1=1.-0.62*dexp(-emev/200.)*dsin(10.9/emev**0.28)
c     pearlstein added low energy enhancement factor of 10%
      f1=f1*(1.+0.1*dexp(-(emev-20.)/10.))
c     mass dependent factor
      f2=1.+0.016*dsin(5.3-2.63*dlog(a))
      sigr=sigrb*f1*f2
c     sigt according to fit by s. pearlstein, june 86.
      a13=a**0.3333
      a23=a**0.6667
      alg=dlog(a)
      do 210 k=1,4
      par(k)=dlog(c(k,1))+dlog(c(k,2))*alg+dlog(c(k,3))*alg**2
      par(k)=dexp(par(k))
  210 continue
      epk=par(3)*a13
      fexp1=par(2)*dlog(epk/emev)
      sigt=sigr*(1.+par(4))+par(1)*a13*dexp(-fexp1**2)
      if(emev.lt.20.) go to 220
      ecst=82.0
      acst=238.
      esub=ecst*a13/acst**0.3333
      epk2=epk-esub
      if(epk2.le.0.) go to 220
      fexp2=par(2)*dlog(epk2/emev)
      sigt=sigt+par(1)*a13*dexp(-fexp2**2)
  220 continue
c     for incident neutrons, go to 250
      if(incp.eq.10) go to 250
cs
c     ap=1.
c     if(incp.eq.10020) ap=2.
c     if(emev.lt.20.) call rams(emev,a,ap,sigt,sigr)


      if(emev.ge.50.) go to 250
c     coulomb factor
c     z for stable nucleus according to a, as d. halliday, intro.
c     nuclear physics, wiley p.296
      z=66.7*a/(a23+132.)
c     ec, coulomb barrier half-height, similar to s. pearlstein,
c     j. nuc. energy 23,87(1975) using optical model inverse p cs's.
      w=5.
      ec=2.+0.19*z
      fexcb=dexp((ec-emev)/w)
      fcoul=1./(1.+fexcb)*(1.-dexp(-emev/w))
      sigt=sigt*fcoul
      sigr=sigr*fcoul
  250 sigs=sigt-sigr
      return
      end




c********************************************


c***********************************************************************
c   These programs are taken from the JAM code to give the cross       *
c   sections in SCINFUL-QMD code !!                                    *
c                                                                      *
c              last modified by D.Satoh on 15/08/2000                  *
c***********************************************************************


      subroutine jamsighh(sig,isig,s)


csatoh------------------------------------------------------------------
c   Now, we treat N-N or pi-N reactions in SCINFUL-QMD. So neglect the
c   isig=11-29 !
csatoh------------------------------------------------------------------


c...Give tableted low energy hh cross sections.


c...isig= 1: pp total
c         2: pp elastic
c         3: pn total
c         4: pn elastic
c         5: app total
c         6: app elastic
c         7: pion+ p total
c         8: pion+ p elsstic
c         9: pion- p total
c        10: pion- p elsstic
c        11: k- p total
c        12: k- p elastic
c        13: k- n total
c        14: k- n elastic
c        15: k+ p total
c        16: k+ p elastic
c        17: k+ n total
c        18: k+ n elastic
c        19: k- p -> k0 n charge exchange cross section
c        20: k+ n -> k0 p charge exchange cross section
c        21: k- p => lambda pi0
c        22: k- p => sigma- pi+
c        23: k- p => sigma+ pi-
c        24: lambda p total
c        25: lambda p elastic
c
c        26: pp => pp pi0  sigma_{11}
c        27: pp => pp pi0  sigma_{10}
c        28: pp => pp pi0  sigma_{01}
c        29: factor for calculatin of dn->nn by delailed balance.
c
c....Table parameters
      implicit double precision(a-h, o-z)
      parameter (itblsz=100)
      parameter (tblhig=5.075668d0)
      parameter (tbllow=1.886d0,tlow=0.6344582d0) ! tlow=log(tbllow)
      parameter (tblstp=0.01d0)
cs      parameter (isgmax=29)
      parameter (isgmax=10)
      common /sigma1/ sigfit(isgmax,itblsz)


      if(isig.ge.7.and.isig.le.10) then
        tblsft=0.9d0
      else if(isig.ge.11.and.isig.le.23) then
        tblsft=0.444d0
      else
        tblsft=0.0d0
      endif
      xpt=log(s+tblsft)
      if(xpt.lt.tlow) then
        xpt=tlow
      end if
      index=int((xpt-tlow)/tblstp)+1
      if(index.ge.itblsz) then
        write(6,*)'warning:index.ge.itblsz in sigma index=',index
        write(6,*)'srt isig',s,isig
        index=itblsz-1
      end if


c...Find slopes and cross sections
      x1=(index-1)*tblstp+tlow
      y1in=sigfit(isig,index)
      y2in=sigfit(isig,index+1)
      slin=(y2in-y1in)/tblstp
      sig=slin*(xpt-x1)+y1in


      end


c***********************************************************************


      block data jamsigda


c...Data for low-energy hh cross sections.


      implicit double precision(a-h, o-z)
      parameter(itblsz=100)
cs      parameter(isgmax=29)
      parameter(isgmax=10)


      common /sigma1/sigfit(isgmax,itblsz)
c     common/sigma2/signd(3,itblsz),cofdel(itblsz)


c....pp total


      data (sigfit(1,i),i=1,itblsz)/
c    & 179.967, 42.241,30.861,26.501,24.533,23.915,23.756,23.945,
     & 120.967, 40.241,25.861,24.501,22.533,21.915,21.756,21.945,
     & 24.452, 25.224,26.807,29.646,32.835,36.025,39.013,41.575,
     & 43.593, 45.088,46.103,46.741,47.095,47.256,47.296,47.261,
     & 47.180, 47.066,46.923,46.762,46.585,46.395,46.198,45.994,
     & 45.788, 45.581,45.376,45.172,44.972,44.775,44.581,44.390,
     & 44.200, 44.013,43.828,43.648,43.474,43.307,43.148,42.998,
     & 42.859, 42.730,42.611,42.500,42.398,42.308,42.223,42.145,
     & 42.075, 42.010,41.948,41.892,41.838,41.785,41.735,41.685,
     & 41.635, 41.584,41.533,41.480,41.425,41.369,41.311,41.252,
     & 41.190, 41.128,41.064,40.999,40.934,40.869,40.804,40.740,
     & 40.677, 40.614,40.554,40.495,40.437,40.381,40.326,40.273,
     & 40.221, 40.170,40.120,40.071,40.022,39.974,39.926,39.879,
     & 39.832, 39.786, 39.740, 39.695
     &/


c...pp elastic


      data (sigfit(2,i),i=1,itblsz)/
     & 120.967, 40.241,25.861,24.501,22.533,21.915,21.756,21.165,
     & 23.494, 23.823,23.773,23.865,24.257,24.560,24.574,24.403,
     & 24.297, 24.271,24.248,24.150,23.947,23.640,23.276,22.888,
     & 22.496, 22.113,21.742,21.386,21.045,20.717,20.398,20.087,
     & 19.779, 19.473,19.164,18.850,18.533,18.212,17.893,17.577,
     & 17.268, 16.968,16.678,16.398,16.129,15.868,15.619,15.380,
     & 15.148, 14.924,14.710,14.501,14.299,14.105,13.915,13.731,
     & 13.552, 13.377,13.208,13.042,12.880,12.723,12.568,12.417,
     & 12.270, 12.125,11.984,11.847,11.713,11.583,11.458,11.336,
     & 11.218, 11.106,11.000,10.899,10.804,10.716,10.635,10.561,
     & 10.494, 10.435,10.382,10.336,10.294,10.258,10.225,10.196,
     & 10.169, 10.143,10.118,10.094,10.069,10.044,10.018, 9.991,
     &  9.962,  9.931,  9.899,  9.866
     &/


c...pn total


      data (sigfit(3,i),i=1,itblsz)/
c    & 485.849, 151.193,83.194,62.123,52.687,46.879,42.924,40.170,
     & 385.849, 118.193,73.194,62.123,48.687,46.879,40.924,38.170,
     & 37.249, 36.990,36.222,35.832,35.718,35.791,35.980,36.232,
     & 36.515, 36.811,37.115,37.425,37.743,38.068,38.402,38.740,
     & 39.078, 39.413,39.739,40.053,40.349,40.623,40.874,41.100,
     & 41.299, 41.469,41.610,41.720,41.801,41.856,41.887,41.898,
     & 41.893, 41.876,41.849,41.816,41.778,41.736,41.691,41.644,
     & 41.593, 41.540,41.484,41.426,41.365,41.301,41.235,41.166,
     & 41.097, 41.025,40.952,40.879,40.806,40.734,40.662,40.592,
     & 40.524, 40.458,40.395,40.334,40.277,40.223,40.172,40.124,
     & 40.081, 40.038,40.000,39.963,39.930,39.898,39.867,39.838,
     & 39.809, 39.781,39.753,39.725,39.697,39.668,39.639,39.609,
     & 39.576, 39.543,39.508,39.472,39.436,39.396,39.357,39.315,
     & 39.273, 39.230, 39.185, 39.141
     &/


c...pn elastic
      data (sigfit(4,i),i=1,itblsz)/
     & 385.849,118.193,73.194, 62.123, 48.687, 46.879, 40.924, 37.949,
     & 36.585, 35.783, 34.351, 32.354, 30.777, 28.331, 26.629, 25.329,
     & 24.297, 24.271,24.248,24.150,23.947,23.640,23.276,22.888,
     & 22.496, 22.113,21.742,21.386,21.045,20.717,20.398,20.087,
     & 19.779, 19.473,19.164,18.850,18.533,18.212,17.893,17.577,
     & 17.268, 16.968,16.678,16.398,16.129,15.868,15.619,15.380,
     & 15.148, 14.924,14.710,14.501,14.299,14.105,13.915,13.731,
     & 13.552, 13.377,13.208,13.042,12.880,12.723,12.568,12.417,
     & 12.270, 12.125,11.984,11.847,11.713,11.583,11.458,11.336,
     & 11.218, 11.106,11.000,10.899,10.804,10.716,10.635,10.561,
     & 10.494, 10.435,10.382,10.336,10.294,10.258,10.225,10.196,
     & 10.090, 10.132, 10.167, 10.199, 10.228, 10.251, 10.274, 10.295,
     & 10.316, 10.338, 10.359, 10.382
     &/


c...pp~ total
      data (sigfit(5,i),i=1,itblsz)/
     & 235.72, 227.5,185.12,165.21,151.52,143.79,138.05,133.22,
     & 128.94, 125.04,121.44,118.11,115.01,112.13,109.47,107.01,
     & 104.768,102.72,100.85,99.14,97.568,96.100,94.709,93.366,
     & 92.043, 90.725,89.410,88.105,86.823,85.580,84.391,83.270,
     & 82.229, 81.266,80.374,79.534,78.728,77.940,77.161,76.388,
     & 75.624, 74.870,74.130,73.405,72.696,72.003,71.329,70.673,
     & 70.036, 69.418,68.821,68.244,67.688,67.151,66.635,66.137,
     & 65.658, 65.199,64.757,64.331,63.921,63.527,63.148,62.781,
     & 62.427, 62.084,61.751,61.427,61.110,60.801,60.497,60.198,
     & 59.904, 59.613,59.324,59.037,58.751,58.466,58.182,57.898,
     & 57.614, 57.330,57.046,56.763,56.479,56.197,55.916,55.636,
     & 55.359, 55.083,54.811,54.543,54.278,54.018,53.763,53.513,
     & 53.269, 53.031, 52.799, 52.573
     &/


c...pp~ elastic
      data (sigfit(6,i),i=1,itblsz)/
     & 73.829, 75.373,66.216,59.243,56.159,54.083,52.219,50.518,
     & 48.973, 47.571,46.303,45.153,44.108,43.150,42.260,41.419,
     & 40.611, 39.825,39.053,38.287,37.521,36.746,35.959,35.157,
     & 34.344, 33.523,32.701,31.885,31.082,30.300,29.545,28.822,
     & 28.132, 27.478,26.859,26.274,25.720,25.195,24.698,24.225,
     & 23.774, 23.343,22.930,22.532,22.150,21.781,21.425,21.080,
     & 20.744, 20.420,20.103,19.795,19.495,19.203,18.918,18.640,
     & 18.368, 18.102,17.843,17.589,17.342,17.101,16.865,16.635,
     & 16.411, 16.192,15.979,15.772,15.570,15.373,15.182,14.997,
     & 14.817, 14.642,14.472,14.307,14.148,13.994,13.845,13.700,
     & 13.559, 13.422,13.290,13.162,13.037,12.916,12.798,12.684,
     & 12.573, 12.464,12.358,12.255,12.154,12.055,11.959,11.865,
     & 11.773, 11.682, 11.594, 11.506
     &/


cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c...pion+ p total
      data (sigfit(7,i),i=1,itblsz)/
     &  0.000,  0.000, 0.000, 0.000, 0.000, 6.058, 6.147,15.689,
     & 33.768, 68.878,120.614,173.692,192.154,160.644,123.116,93.466,
     & 70.706, 53.969,42.287,34.251,28.386,23.954,20.633,18.191,
     & 16.612, 15.924,16.127,17.231,19.039,21.065,22.910,24.363,
     & 25.480, 26.576,27.954,29.801,32.141,34.786,37.266,38.929,
     & 39.316, 38.584,37.202,35.606,34.088,32.791,31.763,31.003,
     & 30.494, 30.173,29.993,29.921,29.902,29.910,29.919,29.914,
     & 29.881, 29.814,29.711,29.577,29.417,29.244,29.067,28.893,
     & 28.728, 28.570,28.417,28.265,28.109,27.946,27.778,27.606,
     & 27.435, 27.270,27.111,26.961,26.819,26.683,26.554,26.432,
     & 26.316, 26.209,26.110,26.018,25.931,25.856,25.783,25.717,
     & 25.654, 25.597,25.539,25.487,25.435,25.384,25.336,25.289,
     & 25.241, 25.194, 25.148, 25.103
     &/


c...pion+ p elastic
      data (sigfit(8,i),i=1,itblsz)/
     &  0.000,  0.000,  0.000,  0.000,  0.000,  6.058,  6.147, 15.689,
     & 33.768, 68.878, 120.614,173.692,192.154,160.644,123.116,93.466,
     & 70.706, 53.969, 42.287, 34.251, 28.386, 22.630, 18.205, 15.126,
     & 12.819, 11.155, 10.137,  9.649,  9.595,  9.894, 10.464, 11.204,
     & 12.014, 12.837, 13.663, 14.496, 15.324, 16.099, 16.722, 17.037,
     & 16.896, 16.300, 15.412, 14.421, 13.459, 12.598, 11.870, 11.271,
     & 10.783, 10.382, 10.047,  9.759,  9.505,  9.279,  9.070,  8.878,
     &  8.697,  8.525,  8.362,  8.205,  8.054,  7.909,  7.768,  7.633,
     &  7.502,  7.375,  7.253,  7.136,  7.022,  6.912,  6.806,  6.704,
     &  6.606,  6.511,  6.420,  6.333,  6.248,  6.166,  6.087,  6.011,
     &  5.937,  5.866,  5.797,  5.731,  5.666,  5.603,  5.543,  5.483,
     &  5.426,  5.370,  5.316,  5.263,  5.212,  5.162,  5.113,  5.066,
     &  5.020,  4.975,  4.931,  4.889
     &/


c...pion- p total
      data (sigfit(9,i),i=1,itblsz)/
     &  8.102,  8.230, 8.357, 8.485, 8.613, 8.740, 8.868,11.766,
     & 16.957, 26.810,44.361,61.961,67.514,57.631,44.819,35.576,
     & 30.090, 27.407,26.941,27.539,28.711,30.694,33.987,38.823,
     & 43.836, 44.236,41.079,38.625,39.577,44.125,51.113,56.464,
     & 54.333, 48.098,42.487,38.917,37.131,36.450,36.219,36.013,
     & 35.652, 35.212,34.871,34.715,34.726,34.843,34.998,35.136,
     & 35.218, 35.223,35.148,34.997,34.786,34.533,34.251,33.954,
     & 33.654, 33.359,33.073,32.801,32.543,32.296,32.062,31.837,
     & 31.620, 31.410,31.204,31.004,30.808,30.617,30.433,30.254,
     & 30.083, 29.919,29.762,29.610,29.464,29.324,29.189,29.061,
     & 28.938, 28.820,28.708,28.600,28.497,28.396,28.299,28.203,
     & 28.109, 28.017,27.925,27.835,27.745,27.656,27.567,27.480,
     & 27.393, 27.306, 27.221, 27.137
     &/


c...pion- p elastic
      data (sigfit(10,i),i=1,itblsz)/
     &  1.687,  1.714, 1.740, 1.767, 1.793, 1.820, 1.847, 3.126,
     &  5.355,  8.770,13.946,19.657,21.690,20.101,17.433,15.358,
     & 13.889, 12.908,12.404,12.384,12.863,13.809,15.114,16.548,
     & 17.656, 17.832,17.163,16.617,16.944,18.415,20.763,22.696,
     & 22.511, 20.511,18.126,16.099,14.536,13.344,12.426,11.722,
     & 11.188, 10.778,10.451,10.177, 9.938, 9.723, 9.525, 9.339,
     &  9.163,  8.995, 8.834, 8.679, 8.528, 8.382, 8.240, 8.102,
     &  7.968,  7.838, 7.712, 7.589, 7.470, 7.355, 7.244, 7.137,
     &  7.033,  6.934, 6.838, 6.746, 6.658, 6.574, 6.492, 6.413,
     &  6.337,  6.263, 6.190, 6.120, 6.050, 5.982, 5.915, 5.848,
     &  5.782,  5.718, 5.654, 5.591, 5.530, 5.470, 5.411, 5.354,
     &  5.298,  5.244, 5.193, 5.143, 5.095, 5.049, 5.005, 4.962,
     &  4.922,  4.884,  4.847,  4.812
     &/


ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


      end


c***********************************************************************
c     This is file SIGPIC
c
c       Purpose is to return a total cross section (in barn) of
c       C(pi,x) reaction.
c
c       These data are taken from
c
c ** H.G.Schlaile "Amplitude analysis of pion-12C elastic scattering"
c    Phys.Rev.C55, 2584, (1997) **
c
      function sigpic(en)
      dimension ene(58), sig(58)


      data ene/20.63, 27.01, 38.18, 44.55,  49.33,  60.48,  66.84,
     +         73.22, 81.20, 89.17, 95.56, 111.60, 119.60, 130.90,
     +     150.20, 169.60, 185.80, 195.50, 214.90, 229.50, 244.10,
     +     263.50, 286.10, 299.10, 323.30, 352.40, 362.10, 376.70,
     +     400.90, 421.90, 449.30, 492.90, 522.00, 549.40, 573.60,
     +     601.00, 626.20, 647.80, 696.20, 723.60, 746.20, 788.10,
     +     807.40, 828.40, 854.20, 880.00, 918.70, 951.00, 978.40,
     +     1012.0, 1038.0, 1085.0, 1133.0, 1180.0, 1220.0, 1259.0,
     +     1290.0, 3000.0/


      data sig/0.1690, 0.2062, 0.2641, 0.3049, 0.3356, 0.4030,
     +         0.4467, 0.4816, 0.5259, 0.5749, 0.6039, 0.6470,
     +         0.6748, 0.6878, 0.6872, 0.6689, 0.6512, 0.6353,
     +         0.6069, 0.5726, 0.5484, 0.5183, 0.4864, 0.4663,
     +         0.4309, 0.3990, 0.3872, 0.3724, 0.3523, 0.3394,
     +         0.3240, 0.3051, 0.2980, 0.2951, 0.2933, 0.2951,
     +         0.2969, 0.2993, 0.3040, 0.3064, 0.3082, 0.3141,
     +         0.3183, 0.3201, 0.3189, 0.3189, 0.3219, 0.3243,
     +         0.3266, 0.3278, 0.3284, 0.3308, 0.3332, 0.3344,
     +         0.3338, 0.3339, 0.3315, 0.3315/




       nn=58
       enn=en
       sigma=exterp( ene, sig, enn, nn, 1)


       sigpic= sigma


       return
       end


c***********************************************************************


